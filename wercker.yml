box: golang:1.9
build:
  base-path: "/go/src/github.com/oracle/oci-flexvolume-driver"
  steps:
    - script:
      name: write VERSION.txt
      code: |
        make version > VERSION.txt
        cat VERSION.txt

    - script:
      name: check boilerplate
      code: ./hack/verify-boilerplate.sh

    - script:
      name: go fmt
      code: make gofmt

    - script:
      name: go vet
      code: make govet

    - script:
      name: unit tests
      code: make test

    - script:
      name: build
      code: |
        make build
        make build-integration-tests

    - script:
      name: manifests
      code: make manifests

integration-test:
  box:
    id: iad.ocir.io/oracle/oci-flexvolume-driver-system-test:1.0.3
  steps:
    - script:
        name: integration test
        code: |
          cd ./test/integration/
          ./run.sh

system-test:
  box:
    id: iad.ocir.io/oracle/oci-flexvolume-driver-system-test:1.0.3
  steps:
    - script:
      name: set ENV vars
      code: |
        export VERSION=$(cat VERSION.txt)
        echo "Pushing test version ${VERSION}"

    - script:
      name: prepare
      code: |
        mkdir /test
        cp -R ./dist /dist
        cp -R ./test/system /test/system

    - internal/docker-push:
      repository: iad.ocir.io/oracle/oci-flexvolume-driver-test
      tag: $VERSION
      working-dir: /test/system
      entrypoint: ./runner.py
      registry: https://iad.ocir.io/v2
      username: $OCIRUSERNAME
      password: $OCIRPASSWORD

    - script:
        name: system test
        code: |
          cd /test/system
          ./runner.py --cluster-check --create-using-oci --enforce-cluster-locking --install --destructive

validate-test-image:
  box:
    id: iad.ocir.io/oracle/oci-flexvolume-driver-system-test:1.0.3
  steps:
    - script:
      name: set ENV vars
      code: |
        export VERSION=$(cat VERSION.txt)
        echo "Test image version ${VERSION}"

    - script:
        name: validate test image
        code: |
          cd ./test/system
          ./run-test-image.sh $VERSION


push:
  box:
    id: oraclelinux:7-slim
  steps:
    - script:
        name: set ENV vars
        code: |
          export VERSION=$(cat VERSION.txt)
          echo "${VERSION}"

    - script:
        name: Ensure version is unique
        code: |
          if curl -s https://api.github.com/repos/oracle/oci-flexvolume-driver/git/refs/tags | grep "tags/$VERSION"; then
            echo "Tag $VERSION already exists. Doing nothing."
            exit 1
          fi

    - script:
        name: prepare
        code: |
          cp ./dist/bin/oci /oci
          chmod +x /oci
          cp ./deploy.sh /deploy.sh
          chmod +x /deploy.sh

    - internal/docker-push:
        repository: iad.ocir.io/oracle/oci-flexvolume-driver
        tag: $VERSION
        entrypoint: /deploy.sh
        registry: https://iad.ocir.io/v2
        username: $OCIRUSERNAME
        password: $OCIRPASSWORD

    - internal/docker-push:
        repository: lhr.ocir.io/oracle/oci-flexvolume-driver
        tag: $VERSION
        entrypoint: /deploy.sh
        registry: https://lhr.ocir.io/v2
        username: $OCIRUSERNAME
        password: $OCIRPASSWORD

    - internal/docker-push:
        repository: phx.ocir.io/oracle/oci-flexvolume-driver
        tag: $VERSION
        entrypoint: /deploy.sh
        registry: https://phx.ocir.io/v2
        username: $OCIRUSERNAME
        password: $OCIRPASSWORD

    - internal/docker-push:
        repository: fra.ocir.io/oracle/oci-flexvolume-driver
        tag: $VERSION
        entrypoint: /deploy.sh
        registry: https://fra.ocir.io/v2
        username: $OCIRUSERNAME
        password: $OCIRPASSWORD


release:
  box:
    id: oraclelinux:7-slim
  steps:
    - script:
        name: set ENV vars
        code: |
          export VERSION=$(cat VERSION.txt)
          echo "${VERSION}"

    - script:
        name: Ensure version is unique
        code: |
          if curl -s https://api.github.com/repos/oracle/oci-flexvolume-driver/git/refs/tags | grep "tags/$VERSION"; then
            echo "Tag $VERSION already exists. Doing nothing."
            exit 1
          fi

    - github-create-release:
      token: $GITHUB_TOKEN
      tag: $VERSION
      title: $VERSION
      draft: false

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: ./dist/oci-flexvolume-driver.yaml
      filename: oci-flexvolume-driver.yaml
      content-type: text/yaml

    - github-upload-asset:
      token: $GITHUB_TOKEN
      file: ./dist/bin/oci
      content-type: application/octet-stream
      filename: oci
